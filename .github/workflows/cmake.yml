name: CMake

on:
  push:
  pull_request:

env:
  BUILD_TYPE: Debug
  PKG_CONFIG_PATH: ${{github.workspace}}/CLRX/lib/pkgconfig
  RED_O_LATOR_DEVICE_CONFIG_PATH: ${{github.workspace}}/driver/resources/rx-570.ini
  THREAD_COUNT: 9
  WXWIN: ${{github.workspace}}/wxWidgets
  WX_CONFIG: ${{github.workspace}}/wxWidgets-repo/wxbuild/wx-config

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v2

      - name: Install GTK 3 on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install libgtk-3-dev

      - name: Clone wxWidgets
        run: git clone -b v3.1.5 --recursive https://github.com/wxWidgets/wxWidgets.git wxWidgets-repo

      - name: Configure wxWidgets
        run: cmake -H${{github.workspace}}/wxWidgets-repo -B${{github.workspace}}/wxWidgets-repo/wxbuild
          -DwxBUILD_SHARED=OFF
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build wxWidgets
        run: cmake --build ${{github.workspace}}/wxWidgets-repo/wxbuild -j 16

      - name: Install wxWidgets
        run: cmake --install ${{github.workspace}}/wxWidgets-repo/wxbuild --config ${{env.BUILD_TYPE}} --prefix ${{github.workspace}}/wxWidgets

      - name: Clone OpenCL-Headers
        run: git clone https://github.com/KhronosGroup/OpenCL-Headers

      - name: Clone ICD loader
        run: git clone https://github.com/KhronosGroup/OpenCL-ICD-Loader --depth 1

      - name: Configure ICD Loader
        run: cp -r ${{github.workspace}}/OpenCL-Headers/CL ${{github.workspace}}/OpenCL-ICD-Loader/inc &&
          cmake -H${{github.workspace}}/OpenCL-ICD-Loader -B ${{github.workspace}}/OpenCL-ICD-Loader/build
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          -DCMAKE_INSTALL_LIBDIR=lib

      - name: Build ICD Loader
        run: cmake --build ${{github.workspace}}/OpenCL-ICD-Loader/build -j ${{env.THREAD_COUNT}}

      - name: Install ICD Loader
        run: cmake --install ${{github.workspace}}/OpenCL-ICD-Loader/build
          --prefix ${{github.workspace}}/OpenCL-ICD-Loader
          --config ${{env.BUILD_TYPE}}

      - name: Git clone CLRX
        run: git clone https://github.com/CLRX/CLRX-mirror --depth 1

      - name: Configure CLRX
        run: cmake -H${{github.workspace}}/CLRX-mirror -B ${{github.workspace}}/CLRX-mirror/build
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          -DCMAKE_INSTALL_PREFIX=CLRX
          -DLIB_INSTALL_DIR=lib
          -DNO_CLWRAPPER=ON
          -DBUILD_STATIC_EXE=OFF

      - name: Build CLRX
        run: cmake --build ${{github.workspace}}/CLRX-mirror/build/ -j ${{env.THREAD_COUNT}}

      - name: Install CLRX
        run: cmake --install ${{github.workspace}}/CLRX-mirror/build/ --config ${{env.BUILD_TYPE}} --prefix ${{github.workspace}}/CLRX

      - name: Configure red-o-lator
        run: cmake -H${{github.workspace}} -B ${{github.workspace}}/build
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          -DCMAKE_LIBRARY_PATH=${{github.workspace}}/OpenCL-ICD-Loader/lib
          -DCMAKE_INCLUDE_PATH=${{github.workspace}}/OpenCL-ICD-Loader/inc

      - name: Build red-o-lator
        run: cmake --build ${{github.workspace}}/build -j ${{env.THREAD_COUNT}}

      - name: Install ICD to the Windows system
        if: runner.os == 'Windows'
        run: cd ${{github.workspace}}/driver/install &&
             python register-icd-win.py ${{github.workspace}}/build/lib/${{env.BUILD_TYPE}}/red-o-lator-icd.lib &&
             cd ${{github.workspace}}

      - name: Install ICD to the Unix system
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: sudo mkdir -p /etc/OpenCL/vendors &&
             echo ${{github.workspace}}/build/lib/libred-o-lator-icd.so | sudo tee /etc/OpenCL/vendors/red-o-lator.icd

#      - name: Test red-o-lator
#        run: ctest --test-dir ${{github.workspace}}/build
#              -C ${{env.BUILD_TYPE}}
#              -VV --output-on-failure
#              --debug
